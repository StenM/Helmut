<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Helmut" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="build.properties" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="doc.dir" value="${build.dir}/doc" />
	<property name="test.dir"   value="${basedir}/test" />
	<property name="build.test.dir"       value="${build.dir}/test" />
	<property name="test.reports.dir" value="${build.dir}/reports/" />
	<property name="lib.dir" value="${basedir}/lib" />

	
	<!-- Definitions of classpath variants used for different tasks -->
	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.classes.dir}" />
		<!-- configuration -->
		<pathelement location="${conf.dir}" />
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="lib/hibernate">
					<include name="*.jar" />
				</fileset>
	</path>
	

	<path id="test-classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	    <pathelement path="${build.classes.dir}/" />
		<pathelement path="${build.test.dir}/" />
	</path>

	

	<path id="libs">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->

	<target name="run" depends="build" description="Run the template application">
		<java classname="ee.ut.math.tvt.Helmut.Intro" classpathref="test.classpath" fork="yes">
			<!-- <jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1046" /> -->
		</java>
	</target>

	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<copy todir="${src.dir}">
			<fileset dir="${basedir}">
				<include name="log4j.properties" />
			</fileset>
		</copy>
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true" debuglevel="lines,vars,source" encoding="utf-8" compiler="modern" target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<!-- https://ant.apache.org/manual/tutorial-HelloWorldWithAnt.html -->
	<!-- Increase version number -->
	<target name="increaseVersion">
		<propertyfile file="version.properties">
			<entry key="build.revision.number" value="1" type="int" operation="+" />
		</propertyfile>

		<loadproperties srcFile="version.properties" />
		<property name="new.build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />

		<propertyfile file="version.properties">
			<entry key="build.number" value="${new.build.number}" />
		</propertyfile>
	</target>

	<!--  -->
	<target name="dist" depends="increaseVersion, build" description="Make distribution">
		<jar destfile="${build.dir}/jar/Helmut.jar" basedir="${build.classes.dir}">
			<fileset dir="${build.dir}" includes="*.jpg" />
			<fileset dir="${build.dir}" includes="*.properties" />
			<restrict>
				<archives>
					<zips>
						<fileset dir="lib" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.Helmut.Intro" />
				<attribute name="Version" value="${new.build.number}" />
			</manifest>
		</jar>
		<copy todir="${build.dir}/jar/lib">
			<fileset dir="${basedir}/lib" />
		</copy>
		<copy todir="${build.dir}/jar">
			<fileset dir="${basedir}">
				<include name="*.properties" />
				<include name="*.jpg" />
			</fileset>
		</copy>

	</target>
	
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.Helmut.Intro" classpathref="test.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="jrun" description="Run .jar file">
		<java jar="${build.dir}/jar/Helmut.jar" fork="true" />
	</target>

	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java" />
		</javadoc>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>
	
	<target name="build-tests" depends="build" description="Build the system">
			<javac
	            srcdir="${test.dir}"
	            destdir="${build.test.dir}"
	            debug="true"
	            debuglevel="lines,vars,source"
	            encoding="utf-8"
	            compiler="modern"
	            target="1.5"
	            source="1.5"
	        	classpathref="libs"
	        >
				<classpath>
					<pathelement path="${build.classes.dir}" />
				</classpath>
			</javac>
		</target>
	
	<target name="test" depends="build-tests" description="Run the template application">

			<junit>
				<classpath refid="test-classpath" />

				<formatter type="brief" usefile="false" />
				<batchtest>
					<fileset dir="${build.test.dir}" includes="**/*.class" />
				</batchtest>
			</junit>


		</target>
	
	<!-- http://tlrobinson.net/blog/2008/11/ant-tasks-for-git/ -->
	<macrodef name = "git">
		<attribute name = "command" />
		<attribute name = "dir" default = "" />
		<element name = "args" optional = "true" />
		<sequential>
			<echo message = "git @{command}" />
			<exec executable = "git" dir = "@{dir}">
				<arg value = "@{command}" />
				<args/>
			</exec>
		</sequential>
	</macrodef>
	
	<!-- http://stackoverflow.com/questions/21674284/how-to-commit-projects-changes-to-git-using-ant -->
	<target name="git_commit" description="Commit all changes to git">
		<input message="Commit message" addproperty="commit-message" />
		<input message="Username" addproperty="username" />
		<input message="Password" addproperty="password" />
		
		<echo message="Commiting all changes with message ${commit-message}" />
		<git command="add">
			<args>
				<arg value="." />
			</args>
		</git>
		<git command="commit">
			<args>
				<arg value="-am ${commit-message}" />
			</args>
		</git>
		<git command="push">
			<args>
				<arg value="https://${username}:${password}@github.com/StenM/Helmut.git" />
			</args>
		</git>
	</target>

	<target name="git_tag" description="Make a tag of current situation in git">
		<input message="Tag name" addproperty="tag-name" />
		<input message="Tag message" addproperty="tag-message" />
		<input message="Username" addproperty="username" />
		<input message="Password" addproperty="password" />
		<echo message="Making a new tag with name ${tag-name} and message ${tag-message}" />
        <git command="tag">
			<args>
				<arg value="-a" />
				<arg value="${tag-name}" />
				<arg value="-m" />
				<arg value="${tag-message}" />
			</args>
        </git>
	    <git command="push">
	    	<args>
	    		<arg value="--tags" />
	    		<arg value="https://${username}:${password}@github.com/StenM/Helmut.git" />
	    	</args>
	    </git>
	</target>
	
	<!--Adding new database specific variables-->

	<property name="lib.dir" value="${basedir}/lib"/>

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>
	<!--We also need to extend the classpath, otherwise ANT will not find new Hibernate JAR files.-->

	<path id="run.classpath">
	        <pathelement location="${build.classes.dir}"/>
	        <!-- configuration -->
	        <pathelement location="${conf.dir}"/>
	        <fileset dir="${lib.dir}">
	            <include name="*.jar"/>
	        </fileset>

	        <fileset dir="${lib.hibernate.dir}">
	             <include name="*.jar"/>
	        </fileset>
	</path>
	<!--Next, extending the JAVA compilation classpath compile.classpath, by adding the location of the JAR files.-->

	<path id="compile.classpath">
	        <fileset dir="${lib.dir}">
	            <include name="*.jar"/>
	        </fileset>

	        <fileset dir="${lib.hibernate.dir}">
	             <include name="*.jar"/>
	        </fileset>
	 </path>
	<!--Adding two additional targets dbmanager and startdb:-->

	<target name="dbmanager" description="Start the HSQLDB manager">
	        <java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	    <target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
	</target>


</project>